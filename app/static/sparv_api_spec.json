{
  "openapi": "3.0.0", 
  "info": {
    "title": "Sparv API", 
    "description": "Sparv is Spr\u00e5kbanken\u2019s annotation tool and contains a corpus import pipeline\nand a web service including a [web interface](https://spraakbanken.gu.se/sparv/).\nIt can be used to annotate shorter texts using the same tools as are applied\nin the annotation of the corpora in [Korp](https://spraakbanken.gu.se/korp) and the texts in\n[Strix](https://spraakbanken.gu.se/strix).\n\nYou can read more about Sparv on [Spr\u00e5kbanken's web page](https://spraakbanken.gu.se/eng/research/infrastructure/sparv).\n", 
    "x-logo": {
      "url": "https://ws.spraakbanken.gu.se/ws/sparv/v2/static/sparv_frame.png"
    }, 
    "contact": {
      "name": "Spr\u00e5kbanken", 
      "url": "https://spraakbanken.gu.se/", 
      "email": "sb@svenska.gu.se"
    }, 
    "license": {
      "name": "MIT", 
      "url": "https://opensource.org/licenses/MIT"
    }, 
    "version": "3.0"
  }, 
  "servers": [
    {
      "url": "https://ws.spraakbanken.gu.se/ws/sparv/v3", 
      "description": "Production server"
    }, 
    {
      "url": "https://ws.spraakbanken.gu.se/ws/sparvlabb/v3", 
      "description": "Lab version"
    }
  ], 
  "tags": [
    {
      "name": "Analysis", 
      "description": "### Queries for Annotating Texts\n\nThe default query for the text analysis can be sent as GET or POST requests.\nThe latter can be useful for longer texts. In both cases the response is a JSON\nobject containing the text analysis in XML format.\nSee [Default query](#tag/Analysis/paths/~1/get) for more details.\n\nIt is also possible to upload text or XML files.\nIn this case the response is a JSON object with a download link to a zip file\ncontaining the annotation.\nSee [File upload](#tag/Files/paths/~1upload/post) for more details.\n\n### Settings\nThe web service supports some custom settings, e.g. it lets you choose\nbetween different tokenizers on word, sentence, and paragraph level\nand you can define which annotations should be generated. Via the settings you\ncan also choose the language of your input and you can define whether your input\nis in XML or plain text.\n\nThese settings are provided as a JSON object to the `settings` parameter.\nThis object must satisfy the JSON schema that is generated by `/schema` call\nwhen provided with a `language` and a `mode` parameter:\n\n[`/schema?language=sv&mode=plain`](https://ws.spraakbanken.gu.se/ws/sparv/v2/schema?language=sv&mode=plain)\n\nThe schema holds default values for all the attributes. The use of the settings\nparameter is therefore optional.\n\nThis is an example for a request which only generates a dependency analysis:\n\n[`/?text=Det+trodde+jag+aldrig.&settings={\"positional_attributes\":{\"dependency_attributes\":[\"ref\",\"dephead\",\"deprel\"],\"lexical_attributes\":[],\"compound_attributes\":[]}}`](https://ws.spraakbanken.gu.se/ws/sparv/v2/?text=Det+trodde+jag+aldrig.&settings={\"positional_attributes\":{\"dependency_attributes\":[\"ref\",\"dephead\",\"deprel\"],\"lexical_attributes\":[],\"compound_attributes\":[]}})\n\nIf you are not sure how to define the settings parameter you can get help\nfrom the [frontend](https://spraakbanken.gu.se/sparv) by clicking\n`Show JSON Settings` under `Show advanced settings`. This will generate\nthe JSON object for the chosen settings which is sent in the `settings` parameter.\n\n### Analysing other Languages\n\nThe default analysis language is Swedish but Sparv\nalso supports other languages. The language is specified by supplying\na two-letter ISO 639-1 code to the `language` parameter.\n\nThis is an example for an analysis of a German sentence:\n\n[`/?text=Nun+folgt+ein+deutscher+Beispielsatz.&language=de`](https://ws.spraakbanken.gu.se/ws/sparv/v2/?text=Nun+folgt+ein+deutscher+Beispielsatz.&language=de)\n\nDifferent kinds of settings are supported for different languages, depending on which tool\nis used for the analysis. Please use the [frontend](https://spraakbanken.gu.se/sparv)\nif you want to check what options there are for a certain language.\nAlternatively you can check the JSON schema for the language you want to analyse by sending a schema request, e.g.:\n\n[`/schema?language=de`](https://ws.spraakbanken.gu.se/ws/sparv/v2/schema?language=de)\n\n[This language table](https://spraakbanken.gu.se/eng/research/infrastructure/sparv/distribution/pipeline#language_table)\nprovides information on which languages are currently supported and which tools are used for their analysis.\n"
    }, 
    {
      "name": "General"
    }, 
    {
      "name": "Files", 
      "description": "File upload and download."
    }, 
    {
      "name": "Cleanup", 
      "description": "Calls for removing builds."
    }
  ], 
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Analysis"
        ], 
        "summary": "Default query", 
        "description": "When provided with the text parameter this call handles text input and runs the Sparv analysis.\n\n### Example\n\n[`/?text=En+exempelmening+till+n\u00e4ttj\u00e4nsten`](https://ws.spraakbanken.gu.se/ws/sparv/v2/?text=En+exempelmening+till+n\u00e4ttj\u00e4nsten)\n", 
        "parameters": [
          {
            "name": "text", 
            "in": "query", 
            "required": true, 
            "description": "The text to be analysed", 
            "schema": {
              "type": "string"
            }
          }, 
          {
            "$ref": "#/components/parameters/ModeParam"
          }, 
          {
            "$ref": "#/components/parameters/IncrementalParam"
          }, 
          {
            "$ref": "#/components/parameters/LanguageParam"
          }, 
          {
            "$ref": "#/components/parameters/SettingsParam"
          }
        ], 
        "responses": {
          "200": {
            "description": "Text analysis in XML", 
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalysisSchema"
                }
              }
            }
          }, 
          "500": {
            "description": "Failed to run analysis", 
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          }
        }
      }, 
      "post": {
        "tags": [
          "Analysis"
        ], 
        "summary": "Default query", 
        "description": "When provided with the text parameter this call handles text input and runs the Sparv analysis.\n\n### Example\n\n```.bash\ncurl -X POST --data-binary text=\"En exempelmening till n\u00e4ttj\u00e4nsten\" https://ws.spraakbanken.gu.se/ws/sparv/v2/\n```\n", 
        "parameters": [
          {
            "name": "text", 
            "in": "query", 
            "required": true, 
            "description": "The text to be analysed", 
            "schema": {
              "type": "string"
            }
          }, 
          {
            "$ref": "#/components/parameters/ModeParam"
          }, 
          {
            "$ref": "#/components/parameters/IncrementalParam"
          }, 
          {
            "$ref": "#/components/parameters/LanguageParam"
          }, 
          {
            "$ref": "#/components/parameters/SettingsParam"
          }
        ], 
        "responses": {
          "200": {
            "description": "Text analysis in XML", 
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalysisSchema"
                }
              }
            }
          }, 
          "500": {
            "description": "Failed to run analysis", 
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          }
        }
      }
    }, 
    "/schema": {
      "get": {
        "tags": [
          "Analysis"
        ], 
        "summary": "Schema", 
        "description": "Returns the json schema generated from the provided parameters.\n\n### Example\n\n[`/schema?language=sv&mode=plain`](https://ws.spraakbanken.gu.se/ws/sparv/v2/schema?language=sv&mode=plain)\n", 
        "parameters": [
          {
            "$ref": "#/components/parameters/ModeParam"
          }, 
          {
            "$ref": "#/components/parameters/LanguageParam"
          }, 
          {
            "$ref": "#/components/parameters/MinifyParam"
          }
        ], 
        "responses": {
          "200": {
            "description": "OK (schema returned)", 
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsSchema"
                }
              }
            }
          }, 
          "500": {
            "description": "Failed to return schema", 
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          }
        }
      }
    }, 
    "/makefile": {
      "get": {
        "tags": [
          "Analysis"
        ], 
        "summary": "Makefile", 
        "description": "Returns the Makefile generated from the provided parameters.\n\n### Example\n\n[`/makefile?settings={\"positional_attributes\":{\"dependency_attributes\":[\"ref\",\"dephead\",\"deprel\"],\"lexical_attributes\":[],\"compound_attributes\":[]}}`](https://ws.spraakbanken.gu.se/ws/sparv/v2/makefile?settings={\"positional_attributes\":{\"dependency_attributes\":[\"ref\",\"dephead\",\"deprel\"],\"lexical_attributes\":[],\"compound_attributes\":[]}})\n", 
        "parameters": [
          {
            "$ref": "#/components/parameters/ModeParam"
          }, 
          {
            "$ref": "#/components/parameters/IncrementalParam"
          }, 
          {
            "$ref": "#/components/parameters/LanguageParam"
          }, 
          {
            "$ref": "#/components/parameters/SettingsParam"
          }
        ], 
        "responses": {
          "200": {
            "description": "OK (Makefile returned)", 
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MakefileSchema"
                }
              }
            }
          }, 
          "500": {
            "description": "Failed to return Makefile", 
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          }
        }
      }
    }, 
    "/join": {
      "get": {
        "tags": [
          "Analysis"
        ], 
        "summary": "Join", 
        "description": "Joins an existing build.\n\nIn the response of a text analysis you can find a hash number. This hash can be used to join an earlier build.\n\nThe response contains the chosen settings, the original text and the result of the annotation.\n", 
        "parameters": [
          {
            "$ref": "#/components/parameters/IncrementalParam"
          }, 
          {
            "$ref": "#/components/parameters/HashParam"
          }
        ], 
        "responses": {
          "200": {
            "description": "The settings, original input text and text analysis in XML", 
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JoinSchema"
                }
              }
            }
          }, 
          "500": {
            "description": "Failed to join build", 
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          }
        }
      }
    }, 
    "/status": {
      "get": {
        "tags": [
          "General"
        ], 
        "summary": "Status", 
        "description": "Returns the status of existing builds.", 
        "security": [
          {
            "ApiKeyAuth": []
          }
        ], 
        "responses": {
          "200": {
            "description": "OK (successfully authenticated)", 
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusSchema"
                }
              }
            }
          }, 
          "401": {
            "description": "Failed to show status: secret key could not be confirmed", 
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            }
          }, 
          "500": {
            "description": "Failed to show status", 
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          }
        }
      }
    }, 
    "/ping": {
      "get": {
        "tags": [
          "General"
        ], 
        "summary": "Ping backend", 
        "description": "Pings the backend, responds with the status of the catapult.\n\n### Example\n\n[`/ping`](https://ws.spraakbanken.gu.se/ws/sparv/v2/ping)\n", 
        "responses": {
          "200": {
            "description": "OK (catapult responds)", 
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PingSchema"
                }
              }
            }
          }, 
          "500": {
            "description": "Failed to ping catapult", 
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          }
        }
      }
    }, 
    "/upload": {
      "post": {
        "tags": [
          "Files"
        ], 
        "summary": "File upload", 
        "description": "Handles file uploads and runs the analysis.\n\n### Example\n\n```.bash\ncurl -X POST -F files[]=@/path/to/file/myfile.txt https://ws.spraakbanken.gu.se/ws/sparv/v2/upload?\n```\n", 
        "parameters": [
          {
            "$ref": "#/components/parameters/ModeParam"
          }, 
          {
            "$ref": "#/components/parameters/LanguageParam"
          }, 
          {
            "$ref": "#/components/parameters/SettingsParam"
          }, 
          {
            "name": "email", 
            "in": "query", 
            "required": false, 
            "description": "The user's email address", 
            "schema": {
              "type": "string", 
              "default": ""
            }
          }
        ], 
        "requestBody": {
          "description": "Files to be uploaded and analysed", 
          "required": true, 
          "content": {
            "text/plain": {
              "schema": {
                "type": "string", 
                "format": "binary"
              }
            }, 
            "text/xml": {
              "schema": {
                "type": "string", 
                "format": "binary"
              }
            }
          }
        }, 
        "responses": {
          "200": {
            "description": "Download link", 
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileSchema"
                }
              }
            }
          }, 
          "500": {
            "description": "Analysis failed", 
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          }
        }
      }
    }, 
    "/download": {
      "get": {
        "tags": [
          "Files"
        ], 
        "summary": "File download", 
        "description": "Handles download of result files.", 
        "parameters": [
          {
            "$ref": "#/components/parameters/HashParam"
          }
        ], 
        "responses": {
          "200": {
            "description": "Zip file downloaded", 
            "content": {
              "application/zip": {
                "schema": {
                  "type": "string", 
                  "format": "binary"
                }
              }
            }
          }, 
          "500": {
            "description": "Download failed", 
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          }
        }
      }
    }, 
    "/cleanup": {
      "get": {
        "tags": [
          "Cleanup"
        ], 
        "summary": "Cleanup", 
        "description": "Removes builds that are finished and haven\u2019t been accessed within the timeout (default: 7 days).", 
        "security": [
          {
            "ApiKeyAuth": []
          }
        ], 
        "responses": {
          "200": {
            "description": "OK (old builds removed)", 
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Cleanup"
                    }, 
                    {
                      "$ref": "#/components/schemas/NoCleanup"
                    }
                  ]
                }
              }
            }
          }, 
          "500": {
            "description": "Failed to remove builds", 
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          }, 
          "401": {
            "description": "Cleanup failed: secret key could not be confirmed", 
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            }
          }
        }
      }
    }, 
    "/cleanup/errors": {
      "get": {
        "tags": [
          "Cleanup"
        ], 
        "summary": "Cleanup errors", 
        "description": "Removes builds that are finished and haven\u2019t been accessed within the timeout (default: 7 days) and the builds with status Error.", 
        "security": [
          {
            "ApiKeyAuth": []
          }
        ], 
        "responses": {
          "200": {
            "description": "OK (cleanup succeeded)", 
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Cleanup"
                    }, 
                    {
                      "$ref": "#/components/schemas/NoCleanup"
                    }
                  ]
                }
              }
            }
          }, 
          "500": {
            "description": "Failed to remove builds", 
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          }, 
          "401": {
            "description": "Cleanup failed: secret key could not be confirmed", 
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            }
          }
        }
      }
    }, 
    "/cleanup/forceone": {
      "get": {
        "tags": [
          "Cleanup"
        ], 
        "summary": "Cleanup one build", 
        "description": "Removes a single build.", 
        "parameters": [
          {
            "$ref": "#/components/parameters/HashParam"
          }
        ], 
        "security": [
          {
            "ApiKeyAuth": []
          }
        ], 
        "responses": {
          "200": {
            "description": "OK (build removed)", 
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CleanupOne"
                }
              }
            }
          }, 
          "500": {
            "description": "Failed to remove build", 
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          }, 
          "401": {
            "description": "Cleanup failed: secret key could not be confirmed", 
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            }
          }, 
          "400": {
            "description": "No hash supplied", 
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          }
        }
      }
    }, 
    "/cleanup/forceall": {
      "get": {
        "tags": [
          "Cleanup"
        ], 
        "summary": "Cleanup all builds", 
        "description": "Removes all the existing builds.", 
        "security": [
          {
            "ApiKeyAuth": []
          }
        ], 
        "responses": {
          "200": {
            "description": "OK (builds removed)", 
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cleanup"
                }
              }
            }
          }, 
          "500": {
            "description": "Failed to remove builds", 
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralError"
                }
              }
            }
          }, 
          "401": {
            "description": "Cleanup failed: secret key could not be confirmed", 
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            }
          }
        }
      }
    }
  }, 
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey", 
        "in": "query", 
        "name": "secret_key"
      }
    }, 
    "parameters": {
      "SettingsParam": {
        "name": "settings", 
        "in": "query", 
        "required": false, 
        "description": "The settings to be used for the analysis. Must satisfy a shema retrieved from [Schema](#tag/Analysis/paths/~1schema/get).", 
        "schema": {
          "$ref": "#/components/schemas/SettingsSchema"
        }
      }, 
      "ModeParam": {
        "name": "mode", 
        "in": "query", 
        "required": false, 
        "description": "The input mode", 
        "schema": {
          "type": "string", 
          "default": "plain", 
          "enum": [
            "plain", 
            "xml", 
            "file"
          ]
        }
      }, 
      "IncrementalParam": {
        "name": "incremental", 
        "in": "query", 
        "required": false, 
        "description": "Set to `true` if you want to receive more information on how the analysis is being processed.\nNote: Incremental information can only be displayed if your query is run for the first time.\nThe progress information is not available for older builds.\n", 
        "schema": {
          "type": "boolean", 
          "default": false
        }
      }, 
      "HashParam": {
        "name": "hash", 
        "in": "query", 
        "required": true, 
        "description": "Hash of the analysis", 
        "schema": {
          "type": "string"
        }
      }, 
      "MinifyParam": {
        "name": "minify", 
        "in": "query", 
        "required": false, 
        "description": "If set to true, some attributes needed for the frontend will be excluded from the response.", 
        "schema": {
          "type": "boolean", 
          "default": false
        }
      }, 
      "LanguageParam": {
        "name": "language", 
        "in": "query", 
        "required": false, 
        "description": "The language of the text to be analysed.\nCheck [this language table](https://spraakbanken.gu.se/eng/research/infrastructure/sparv/distribution/pipeline#language_table) for more information.\n", 
        "schema": {
          "type": "string", 
          "default": "sv", 
          "enum": [
            "it", 
            "de", 
            "sv-1800", 
            "bg", 
            "ca", 
            "ru", 
            "nl", 
            "pl", 
            "fr", 
            "es", 
            "sv-dev", 
            "ro", 
            "la", 
            "sk", 
            "pt", 
            "sl", 
            "et", 
            "fi", 
            "gl", 
            "en", 
            "sv", 
            "no"
          ]
        }
      }
    }, 
    "schemas": {
      "StatusSchema": {
        "type": "object", 
        "properties": {
          "builds": {
            "type": "array", 
            "items": {
              "properties": {
                "accessed": {
                  "type": "string", 
                  "example": "2018-05-11 18:29:57"
                }, 
                "accessed-secs-ago": {
                  "type": "integer", 
                  "example": 326021.5
                }, 
                "hash": {
                  "type": "string", 
                  "example": "d91d063efb5a8439643147c7367e3a4ddad5ec63"
                }, 
                "since": {
                  "type": "string", 
                  "example": "2018-05-11 18:48:32"
                }, 
                "status": {
                  "type": "string", 
                  "example": "Done"
                }
              }
            }
          }
        }
      }, 
      "PingSchema": {
        "type": "object", 
        "properties": {
          "message": {
            "type": "string", 
            "example": "PONG"
          }, 
          "time": {
            "type": "integer", 
            "example": 0.0081
          }
        }
      }, 
      "GeneralError": {
        "type": "object", 
        "properties": {
          "error": {
            "type": "object", 
            "properties": {
              "message": {
                "type": "string", 
                "example": "Some error message"
              }
            }
          }
        }
      }, 
      "AuthenticationError": {
        "type": "object", 
        "properties": {
          "error": {
            "type": "object", 
            "properties": {
              "message": {
                "type": "string", 
                "example": "Authentication failed."
              }
            }
          }
        }
      }, 
      "MakefileSchema": {
        "type": "object", 
        "properties": {
          "makefile": {
            "type": "string", 
            "example": "include $(SPARV_MAKEFILES)/Makefile.config\ncorpus = untitled\noriginal_dir = original\n\nvrt_columns_annotations = word pos msd baseform lemgram sense complemgram compwf sentiment sentimentclass ref dephead.ref deprel\nvrt_columns             = word pos msd lemma    lex     sense complemgram compwf sentiment sentimentclass ref dephead     deprel\n\nvrt_structs_annotations = sentence.id paragraph.n text text.lix text.ovix text.nk\nvrt_structs             = sentence:id paragraph   text text:lix text:ovix text:nk\n\nxml_elements    = text\nxml_annotations = text\n\ntoken_chunk = sentence\ntoken_segmenter = better_word\n\nsentence_chunk = paragraph\nsentence_segmenter = punkt_sentence\n\nparagraph_chunk = text\nparagraph_segmenter = blanklines\n\ninclude $(SPARV_MAKEFILES)/Makefile.rules\n"
          }
        }
      }, 
      "FileSchema": {
        "type": "object", 
        "properties": {
          "build": {
            "type": "object", 
            "properties": {
              "hash": {
                "type": "string", 
                "example": "a1b1de8f3508c5928352dbfc538025231a336801-f"
              }, 
              "type": {
                "type": "string", 
                "example": "files"
              }
            }
          }, 
          "corpus": {
            "type": "object", 
            "properties": {
              "link": {
                "type": "string", 
                "example": "https://ws.spraakbanken.gu.se/ws/sparv/v2/download?hash=a1b1de8f3508c5928352dbfc538025231a336801-f"
              }
            }
          }
        }
      }, 
      "Cleanup": {
        "type": "object", 
        "properties": {
          "removed-builds": {
            "items": {
              "type": "array", 
              "format": "string", 
              "example": [
                "d91d063efb5a8439643147c7367e3a4ddad5ec63", 
                "a1b1de8f3508c5928352dbfc538025231a336801-f"
              ]
            }
          }
        }
      }, 
      "CleanupOne": {
        "type": "object", 
        "properties": {
          "removed-builds": {
            "items": {
              "type": "array", 
              "format": "string", 
              "example": [
                "d91d063efb5a8439643147c7367e3a4ddad5ec63"
              ]
            }
          }
        }
      }, 
      "NoCleanup": {
        "type": "object", 
        "properties": {
          "message": {
            "type": "string", 
            "example": "No hashes to be removed."
          }
        }
      }, 
      "AnalysisSchema": {
        "type": "object", 
        "properties": {
          "build": {
            "type": "object", 
            "properties": {
              "hash": {
                "type": "string", 
                "example": "ece7233cc6fface3adeef4bfc5dc1e9fdfd94488"
              }
            }
          }, 
          "corpus": {
            "type": "object", 
            "properties": {
              "link": {
                "type": "string", 
                "example": "https://ws.spraakbanken.gu.se/ws/sparv/v2/download?hash=ece7233cc6fface3adeef4bfc5dc1e9fdfd94488"
              }, 
              "analysis": {
                "type": "string", 
                "example": "<corpus>\n  <text lix=\"54.00\" ovix=\"inf\" nk=\"inf\">\n    <paragraph>\n        <sentence id=\"8f7-84d\">\n            <w pos=\"DT\" msd=\"DT.UTR.SIN.IND\" lemma=\"|en|\" lex=\"|en..al.1|\" sense=\"|den..1:-1.000|en..2:-1.000|\" complemgram=\"|\" compwf=\"|\" sentiment=\"\" sentimentclass=\"\" ref=\"1\" dephead=\"2\" deprel=\"DT\">En</w>\n            <w pos=\"NN\" msd=\"NN.UTR.SIN.IND.NOM\" lemma=\"|exempelmening|\" lex=\"|\" sense=\"|\" complemgram=\"|exempel..nn.1+mening..nn.1:1.090e-08|\" compwf=\"|exempel+mening|\" sentiment=\"\" sentimentclass=\"\" ref=\"2\" dephead=\"\" deprel=\"ROOT\">exempelmening</w>\n            <w pos=\"PP\" msd=\"PP\" lemma=\"|till|\" lex=\"|till..pp.1|\" sense=\"|till..1:-1.000|\" complemgram=\"|\" compwf=\"|\" sentiment=\"\" sentimentclass=\"\" ref=\"3\" dephead=\"2\" deprel=\"ET\">till</w>\n            <w pos=\"NN\" msd=\"NN.UTR.SIN.DEF.NOM\" lemma=\"|n\u00e4ttj\u00e4nst|n\u00e4ttj\u00e4nsten|\" lex=\"|\" sense=\"|\" complemgram=\"|n\u00e4t..nn.1+tj\u00e4nst..nn.2:5.711e-11|n\u00e4t..nn.1+tj\u00e4nst..nn.1:5.711e-11|n\u00e4tt..av.1+tj\u00e4nst..nn.1:1.004e-12|n\u00e4tt..av.1+tj\u00e4nst..nn.2:1.004e-12|n\u00e4t..nn.1+tj\u00e4na..vb.1+sten..nn.2:2.049e-27|n\u00e4t..nn.1+tj\u00e4na..vb.1+sten..nn.1:2.049e-27|n\u00e4tt..av.1+tj\u00e4na..vb.1+sten..nn.2:4.784e-28|n\u00e4tt..av.1+tj\u00e4na..vb.1+sten..nn.1:4.784e-28|\" compwf=\"|n\u00e4t+tj\u00e4nsten|n\u00e4tt+tj\u00e4nsten|n\u00e4t+tj\u00e4n+sten|n\u00e4tt+tj\u00e4n+sten|\" sentiment=\"\" sentimentclass=\"\" ref=\"4\" dephead=\"3\" deprel=\"PA\">n\u00e4ttj\u00e4nsten</w>\n        </sentence>\n    </paragraph>\n  </text>\n</corpus>\n"
              }
            }
          }
        }
      }, 
      "JoinSchema": {
        "type": "object", 
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/SettingsSchema"
          }, 
          "original": {
            "type": "text", 
            "example": "&lt;text&gt;En exempelmening till n\u00e4ttj\u00e4nsten&lt;/text&gt;"
          }, 
          "analysis": {
            "$ref": "#/components/schemas/AnalysisSchema"
          }
        }
      }, 
      "SettingsSchema": {
        "type": "obejct", 
        "example": {
          "corpus": "exempelkorpus", 
          "lang": "sv", 
          "textmode": "plain", 
          "word_segmenter": "default_tokenizer", 
          "sentence_segmentation": {
            "sentence_chunk": "paragraph", 
            "sentence_segmenter": "default_tokenizer"
          }, 
          "paragraph_segmentation": {
            "paragraph_segmenter": "blanklines"
          }, 
          "positional_attributes": {
            "lexical_attributes": [
              "pos", 
              "msd", 
              "lemma", 
              "lex", 
              "sense"
            ], 
            "compound_attributes": [
              "complemgram", 
              "compwf"
            ], 
            "dependency_attributes": [
              "ref", 
              "dephead", 
              "deprel"
            ], 
            "sentiment": [
              "sentiment"
            ]
          }, 
          "named_entity_recognition": [], 
          "text_attributes": {
            "readability_metrics": [
              "lix", 
              "ovix", 
              "nk"
            ]
          }
        }
      }
    }
  }
}
